@page "/counter"
@inject HttpClient MiHttpClient
@using System.Net.Http.Json
@using System.Threading.Tasks
@using CPEntidades
@using Radzen.Blazor

<h3>Gestión de Tareas</h3>

<button class="btn btn-success mb-2" @onclick="() => ShowModal(new CLEntidades.TBL_TAREAS())">Agregar Nueva Tarea</button>

<div style="position: relative;">
    <RadzenDataGrid @ref="grid" Data="@tareas" TItem="CLEntidades.TBL_TAREAS" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true"
                    ColumnWidth="200px" FilterMode="FilterMode.Advanced" FilterPopupRenderMode="PopupRenderMode.OnDemand">
        <Columns>
            <RadzenDataGridColumn TItem="CLEntidades.TBL_TAREAS" Property="TBL_TITULO" Title="Título" />
            <RadzenDataGridColumn TItem="CLEntidades.TBL_TAREAS" Property="TBL_DESCRIPCION" Title="Descripción" />
            <RadzenDataGridColumn TItem="CLEntidades.TBL_TAREAS" Property="TBL_FECHAVENCIMIENTO" Title="Fecha Vencimiento" />
            <RadzenDataGridColumn TItem="CLEntidades.TBL_TAREAS" Property="TBL_FECHACREACION" Title="Fecha Creación" />
            <RadzenDataGridColumn TItem="CLEntidades.TBL_TAREAS" Property="TBL_COMPLETADA" Title="Completada" TextAlign="TextAlign.Center">
                <Template Context="tarea">
                    @if (tarea.TBL_COMPLETADA)
                    {
                        <span class="text-success">Sí</span>
                    }
                    else
                    {
                        <span class="text-danger">No</span>
                    }
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="CLEntidades.TBL_TAREAS" Title="Acciones">
                <Template Context="tarea">
                    <RadzenButton Text="Editar" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Click="@(() => ShowModal(tarea))" />
                    <RadzenButton Text="Eliminar" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(() => DeleteTarea(tarea))" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>

    <!-- Modal -->
    @if (modalVisible)
    {
        <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5); position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 1050;">
            <div class="modal-dialog" style="max-width: 600px; margin: 10% auto;">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@modalTitle</h5>
                        <button type="button" class="close" aria-label="Close" @onclick="HideModal">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="titulo">Título</label>
                            <input type="text" class="form-control" id="titulo" @bind-value="newTarea.TBL_TITULO" />
                        </div>
                        <div class="form-group">
                            <label for="descripcion">Descripción</label>
                            <input type="text" class="form-control" id="descripcion" @bind-value="newTarea.TBL_DESCRIPCION" />
                        </div>
                        <div class="form-group">
                            <label for="fechaVencimiento">Fecha Vencimiento</label>
                            <input type="date" class="form-control" id="fechaVencimiento" @bind-value="newTarea.TBL_FECHAVENCIMIENTO" />
                        </div>
                        <div class="form-group">
                            <label for="completada">Completada</label>
                            <input type="checkbox" class="form-check-input" id="completada" @bind-value="newTarea.TBL_COMPLETADA" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" @onclick="AddOrUpdateTarea">Guardar</button>
                        <button type="button" class="btn btn-secondary" @onclick="HideModal">Cancelar</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<CLEntidades.TBL_TAREAS> tareas = new List<CLEntidades.TBL_TAREAS>();
    private CLEntidades.TBL_TAREAS newTarea = new CLEntidades.TBL_TAREAS();
    private bool modalVisible = false;
    private string modalTitle = "";
    private RadzenDataGrid<CLEntidades.TBL_TAREAS> grid;

    protected override async Task OnInitializedAsync()
    {
        await LoadTareas();
    }

    private async Task LoadTareas()
    {
        var response = await MiHttpClient.PostAsJsonAsync("https://localhost:7221/miApi/GetTareas", new { });
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<ApiResponse<List<CLEntidades.TBL_TAREAS>>>();
            tareas = result.TAREAS;
        }
    }

    private async Task AddOrUpdateTarea()
    {
        HttpResponseMessage response;
        if (newTarea.TBL_ID != 0)
        {
            response = await MiHttpClient.PostAsJsonAsync("https://localhost:7221/miApi/RegistraTarea", newTarea);
        }
        else
        {
            response = await MiHttpClient.PostAsJsonAsync("https://localhost:7221/miApi/RegistraTarea", newTarea);
        }

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<ApiResponse<bool>>();
            if (result.resultado)
            {
                await LoadTareas();
                HideModal();
            }
        }
    }

    private void ShowModal(CLEntidades.TBL_TAREAS tarea)
    {
        newTarea = tarea != null ? new CLEntidades.TBL_TAREAS
            {
                TBL_ID = tarea.TBL_ID,
                TBL_TITULO = tarea.TBL_TITULO,
                TBL_DESCRIPCION = tarea.TBL_DESCRIPCION,
                TBL_FECHAVENCIMIENTO = tarea.TBL_FECHAVENCIMIENTO,
                TBL_COMPLETADA = tarea.TBL_COMPLETADA
            } : new CLEntidades.TBL_TAREAS();

        modalTitle = tarea != null && tarea.TBL_ID != 0 ? "Editar Tarea" : "Agregar Nueva Tarea";
        modalVisible = true;
    }

    private void HideModal()
    {
        modalVisible = false;
        newTarea = new CLEntidades.TBL_TAREAS();
    }

    private async Task DeleteTarea(CLEntidades.TBL_TAREAS tarea)
    {
        var response = await MiHttpClient.PostAsJsonAsync("https://localhost:7221/miApi/EliminaTarea?ID_TAREA=" + tarea.TBL_ID, new { });
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<ApiResponse<bool>>();
            if (result.resultado)
            {
                await LoadTareas();
            }
        }
    }

    private class ApiResponse<T>
    {
        public T TAREAS { get; set; }
        public bool resultado { get; set; }
        public string mensaje { get; set; }
    }
}
